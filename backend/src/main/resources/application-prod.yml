# Production Configuration for WebPos
server:
  port: ${PRODUCTION_SERVER_PORT:9832}

# R2DBC Configuration for Production
spring:
  r2dbc:
    url: r2dbc:mysql://${PRODUCTION_DB_HOST:210.121.177.150}:${PRODUCTION_DB_PORT:3306}/${PRODUCTION_DB_NAME:WEBPOS}?useSSL=false&allowPublicKeyRetrieval=true&preserveInstants=false&connectionTimeZone=LOCAL&forceConnectionTimeZoneToSession=false
    username: ${PRODUCTION_DB_USERNAME:gijunpark}
    password: ${PRODUCTION_DB_PASSWORD:park9832}
    pool:
      enabled: true
      initial-size: 2
      max-size: 10
      max-idle-time: 30m
      max-acquire-time: 30s
      max-create-connection-time: 30s

  # Flyway Configuration for Production
  flyway:
    enabled: false  # 수동으로 스키마 생성했으므로 비활성화

  # Redis Configuration for Production
  data:
    redis:
      host: ${PRODUCTION_REDIS_HOST:210.121.177.150}
      port: ${PRODUCTION_REDIS_PORT:6379}
      password: ${PRODUCTION_REDIS_PASSWORD:park983200}
      username: ${PRODUCTION_REDIS_USERNAME:default}
      lettuce:
        pool:
          max-active: ${PRODUCTION_REDIS_POOL_MAX_ACTIVE:50}
          max-idle: ${PRODUCTION_REDIS_POOL_MAX_IDLE:20}
          min-idle: ${PRODUCTION_REDIS_POOL_MIN_IDLE:10}

  # Kafka Configuration for Production
  kafka:
    bootstrap-servers: ${PRODUCTION_KAFKA_BOOTSTRAP_SERVERS:210.121.177.150:9092}
    producer:
      key-serializer: ${PRODUCTION_KAFKA_PRODUCER_KEY_SERIALIZER:org.apache.kafka.common.serialization.StringSerializer}
      value-serializer: ${PRODUCTION_KAFKA_PRODUCER_VALUE_SERIALIZER:org.apache.kafka.common.serialization.StringSerializer}
      retries: ${PRODUCTION_KAFKA_PRODUCER_RETRIES:3}
      acks: ${PRODUCTION_KAFKA_PRODUCER_ACKS:1}
    consumer:
      group-id: ${PRODUCTION_KAFKA_GROUP_ID:pos-group}
      auto-offset-reset: ${PRODUCTION_KAFKA_CONSUMER_AUTO_OFFSET_RESET:earliest}
      key-deserializer: ${PRODUCTION_KAFKA_CONSUMER_KEY_DESERIALIZER:org.apache.kafka.common.serialization.StringDeserializer}
      value-deserializer: ${PRODUCTION_KAFKA_CONSUMER_VALUE_DESERIALIZER:org.apache.kafka.common.serialization.StringDeserializer}

# JWT Configuration for Production
jwt:
  secret: ${PRODUCTION_JWT_SECRET:gijunSecretKey1234567890gijunSecretKey1234567890gijunSecretKey1234567890}
  expiration: ${JWT_EXPIRATION:86400000}
  header: Authorization
  prefix: Bearer

# Management/Actuator Configuration for Production (보안상 제한)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized
      show-components: when-authorized

# Production Logging Configuration - CORS 및 R2DBC 디버깅용
logging:
  level:
    root: INFO
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web.cors: DEBUG
    com.gijun.backend: DEBUG
    # R2DBC 연결 디버깅
    io.r2dbc: INFO
    io.r2dbc.mysql: INFO
    io.r2dbc.pool: INFO
    org.springframework.data.r2dbc: INFO
    org.springframework.r2dbc: INFO

# SpringDoc Configuration - Disabled for Production (보안)
springdoc:
  api-docs:
    enabled: false
  swagger-ui:
    enabled: false
