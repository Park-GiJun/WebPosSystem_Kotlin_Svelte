# WebPos Application Configuration
spring:
  application:
    name: ${APP_NAME:webpos}
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}

# CORS Configuration
app:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:https://gijun.net,https://www.gijun.net,http://localhost:3000,http://localhost:5173,http://localhost:8080,http://127.0.0.1:3000,http://127.0.0.1:5173}
    production-origins: https://gijun.net,https://www.gijun.net
    development-origins: http://localhost:3000,http://localhost:5173,http://localhost:8080,http://127.0.0.1:3000,http://127.0.0.1:5173

# Server Configuration
server:
  port: ${SERVER_PORT:9832}
  error:
    include-message: ${SERVER_ERROR_INCLUDE_MESSAGE:always}
    include-binding-errors: ${SERVER_ERROR_INCLUDE_BINDING_ERRORS:always}

# SpringDoc OpenAPI Configuration
springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true

# Management Endpoints
management:
  endpoints:
    web:
      exposure:
        include: ${MANAGEMENT_ENDPOINTS_INCLUDE:health,info,metrics,prometheus}
      base-path: /actuator
  endpoint:
    health:
      show-details: ${MANAGEMENT_HEALTH_SHOW_DETAILS:always}
      show-components: ${MANAGEMENT_HEALTH_SHOW_COMPONENTS:always}
    info:
      enabled: true
  health:
    redis:
      enabled: ${MANAGEMENT_HEALTH_REDIS_ENABLED:true}
    db:
      enabled: ${MANAGEMENT_HEALTH_DB_ENABLED:true}
  prometheus:
    metrics:
      export:
        enabled: ${MANAGEMENT_PROMETHEUS_ENABLED:true}

# API Documentation
api:
  title: ${API_TITLE:WebPos API}
  description: ${API_DESCRIPTION:Hexagonal Architecture based WebPos Server API}
  version: ${API_VERSION:1.0.0}
  contact:
    name: ${API_CONTACT_NAME:WebPos Team}
    email: ${API_CONTACT_EMAIL:support@webpos.com}
    url: ${API_CONTACT_URL:https://github.com/yourusername/webpos}
  license:
    name: ${API_LICENSE_NAME:MIT License}
    url: ${API_LICENSE_URL:https://opensource.org/licenses/MIT}

# Logging Configuration
logging:
  level:
    root: ${LOG_LEVEL_ROOT:INFO}
    com.gijun.backend: ${LOG_LEVEL_APP:DEBUG}
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.springframework.data.r2dbc: DEBUG
    io.r2dbc.mysql: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    path: ${LOG_PATH:logs}
    name: ${LOG_PATH:logs}/webpos.log

---
# Local Profile
spring:
  config:
    activate:
      on-profile: local
  devtools:
    restart:
      enabled: true
    livereload:
      enabled: true

# Local에서만 상세한 로깅
logging:
  level:
    org.springframework.web.reactive: TRACE
    org.springframework.security: TRACE

springdoc:
  swagger-ui:
    disable-swagger-default-url: false

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev

springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true

---
# Staging Profile
spring:
  config:
    activate:
      on-profile: staging

springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod

# 프로덕션에서는 Swagger UI 비활성화
springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true

# 프로덕션 로깅 레벨 조정
logging:
  level:
    root: WARN
    com.gijun.backend: INFO
